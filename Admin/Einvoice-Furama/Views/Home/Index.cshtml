@{
    ViewBag.Title = Einvoice_Customer.Language.Resource.Index;
}
<script src="~/Scripts/jquery.blockUI.js"></script>
<script src="~/Scripts/Common.js"></script>
<script src="~/Scripts/Extension.js"></script>
<script type="text/javascript">
    var decDigit = { 0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1 };
    function dhex(str) {
        return (str + 0).toString(16).toUpperCase();
    }

    function clearForm(cform) {
        cform.value = "";
    }
    function convertCP2Char(argstr) {

        var outputString = '';
        argstr = argstr.replace(/^\s+/, '');
        if (argstr.length == 0) { return ""; }
        argstr = argstr.replace(/\s+/g, ' ');
        var listArray = argstr.split(' ');
        for (var i = 0; i < listArray.length; i++) {
            var n = parseInt(listArray[i], 16);
            if (n <= 0xFFFF) {
                outputString += String.fromCharCode(n);
            } else if (n <= 0x10FFFF) {
                n -= 0x10000
                outputString += String.fromCharCode(0xD800 | (n >> 10)) + String.fromCharCode(0xDC00 | (n & 0x3FF));
            } else {
                outputString += 'convertCP2Char error: Code point out of range: ' + dhex(n);
            }
        }
        return (outputString);
    }
    function getCPfromChar(argstr) {
        var codepoint = "";
        var haut = 0;
        var n = 0;
        for (var i = 0; i < argstr.length; i++) {
            var b = argstr.charCodeAt(i);
            if (b < 0 || b > 0xFFFF) {
                codepoint += 'Error: Initial byte out of range in getCPfromChar: ' + dhex(b);
            }
            if (haut != 0) {
                if (0xDC00 <= b && b <= 0xDFFF) {
                    codepoint += dhex(0x10000 + ((haut - 0xD800) << 10) + (b - 0xDC00)) + ' ';
                    haut = 0;
                    continue;
                }
                else {
                    codepoint += 'Error: Second byte out of range in getCPfromChar: ' + dhex(haut);
                    haut = 0;
                }
            }
            if (0xD800 <= b && b <= 0xDBFF) {
                haut = b;
            }
            else {
                codepoint += b.toString(16).toUpperCase() + ' ';
            }
        }
        return codepoint;
    }
    function convertDecNCR2CP(argstr) {
        CPstring = '';
        argstr += ' ';
        var tempString = '';
        var charStr = '';

        for (var i = 0; i < argstr.length - 1; i++) {
            if (i < argstr.length - 3 && argstr.charAt(i) == '&'
                && argstr.charAt(i + 1) == '#' && argstr.charAt(i + 2) in decDigit) {
                tempString = '';
                i += 2;
                while (i < argstr.length - 1 && argstr.charAt(i) in decDigit) {
                    tempString += argstr.charAt(i);
                    i++;
                }
                if (argstr.charAt(i) == ';') {
                    charStr += convertCP2Char(parseInt(tempString).toString(16));
                }
                else { charStr += '&#' + tempString; i--; }
            }
            else {
                charStr += argstr.charAt(i);
            }
        }

        CPstring = getCPfromChar(charStr);
        CPstring = CPstring.substring(0, CPstring.length - 1);
        return convertCP2Char(CPstring);
    }
    function ViewByHash() {
        var invHash = $('#fastViewInv').val();
        if (invHash === "") {

            alert(convertDecNCR2CP("@Einvoice_Customer.Language.Resource.nullinvhash"));
        }
        else {
            commonJS.OpenLoading();
            var iframe = $('<iframe>', {
                src: '/EinvoiceCustomer/ViewByHash?hash=' + $('#fastViewInv').val(),
                style: 'width:98% ;height: 900px;border: none; margin:auto',
            });
            showPopup(iframe);

            function showPopup(iframe) {

                commonJS.CloseLoading();

                PopupDialog.ShowHtml({
                    html: '<div id="contentIframe"></div>',
                    title: null,
                    //title: 'Chi tiết hóa đơn',
                    size: 'large',
                    openCallback: function (modal) {
                        $('#contentIframe').append(iframe);
                        $(modal.find('.modal-content')).addClass('padding-25');
                        $(modal).find('.modal-dialog').addClass('boder-style');
                        @*$('#contentIframe').prepend('<img id="imgCancel" src="/Content/Images/mark.png" style="position: absolute; z-index: 3; width: 790px; height: 760px;" />') *@
                    },
                });
            }
        }
    }
</script>
<div class="login-content">
    <div class="col-sm-8 col-sm-offset-2 graybg">
        <h2 class="text-center visible-xs">@Einvoice_Customer.Language.Resource.searchinvoice</h2>
        <div class="col-sm-12">
            <form action="" method="post">
                <div class="col-sm-9 form-group" style=" margin-top:15px">
                    <div class="ml">
                        <input type="text" placeholder="@Einvoice_Customer.Language.Resource.enterSearchinvoice" class="form-control input-lg" name="search" value="" id="fastViewInv" />
                    </div>
                </div>
                <div class="col-sm-3 form-group" style="margin-top:15px">
                    <div class="mr">
                        <input type="button" onclick="return ViewByHash();" style="width:100%" class="btn btn-login btn-lg" name="checkok" value="@Einvoice_Customer.Language.Resource.search" />
                    </div>
                </div>
                <div class="clearfix"></div>
            </form>
        </div>
        <div class="clearfix"></div>
    </div>

    @*<div class="col-sm-6 col-sm-offset-3 graybg mt-10">
        @if (!(Request.IsAuthenticated))
        {

            @Html.Partial("_LoginLayout")

        }
        else
        {

        }
    </div>*@
    <div class="clearfix"></div>
</div>