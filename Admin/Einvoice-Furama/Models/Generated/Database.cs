



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `HDDT_FURAMA`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=DESKTOP-FR6NGQ3\SQLEXPRESS;Initial Catalog=HDDT_FURAMA;Persist Security Info=True;User ID=sa;Password=123456`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace HDDT_FURAMA
{

	public partial class HDDT_FURAMADB : Database
	{
		public HDDT_FURAMADB() 
			: base("HDDT_FURAMA")
		{
			CommonConstruct();
		}

		public HDDT_FURAMADB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			HDDT_FURAMADB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static HDDT_FURAMADB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new HDDT_FURAMADB();
        }

		[ThreadStatic] static HDDT_FURAMADB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static HDDT_FURAMADB repo { get { return HDDT_FURAMADB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    
	[TableName("Company")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class Company : HDDT_FURAMADB.Record<Company>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Name { get; set; }





		[Column] public string TaxCode { get; set; }





		[Column] public string Address { get; set; }





		[Column] public string PhoneNumber { get; set; }





		[Column] public string Fax { get; set; }





		[Column] public string Email { get; set; }





		[Column] public string ContactPerson { get; set; }





		[Column] public string RepresentPerson { get; set; }





		[Column] public string BankNumber { get; set; }





		[Column] public string BankAccountName { get; set; }





		[Column] public string BankName { get; set; }





		[Column] public string TaxAuthority { get; set; }





		[Column] public string Description { get; set; }





		[Column] public string HostName { get; set; }



	}

    
	[TableName("Excel_Upload")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class Excel_Upload : HDDT_FURAMADB.Record<Excel_Upload>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Token { get; set; }





		[Column] public string UrlExcel { get; set; }





		[Column] public string UserName { get; set; }





		[Column] public bool? Completed { get; set; }





		[Column] public DateTime? TimePost { get; set; }



	}

    
	[TableName("sUser")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class sUser : HDDT_FURAMADB.Record<sUser>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Username { get; set; }





		[Column] public string Password { get; set; }





		[Column] public string FullName { get; set; }





		[Column] public string Email { get; set; }





		[Column] public bool? Lock { get; set; }





		[Column] public bool? Active { get; set; }





		[Column] public DateTime? LoginLast { get; set; }





		[Column] public string UserInvoice { get; set; }





		[Column] public string PassInvoice { get; set; }





		[Column] public DateTime? TimePost { get; set; }





		[Column] public DateTime? TimeEdit { get; set; }





		[Column] public bool? Root { get; set; }



	}

    
	[TableName("sGroup")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class sGroup : HDDT_FURAMADB.Record<sGroup>  
    {



		[Column] public int Id { get; set; }





		[Column] public string GroupName { get; set; }



	}

    
	[TableName("Role")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class Role : HDDT_FURAMADB.Record<Role>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Code { get; set; }





		[Column] public string Name { get; set; }



	}

    
	[TableName("Invoice_Pattern")]


	[ExplicitColumns]
    public partial class Invoice_Pattern : HDDT_FURAMADB.Record<Invoice_Pattern>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Pattern { get; set; }





		[Column] public string Serial { get; set; }





		[Column] public DateTime? TimePost { get; set; }





		[Column] public DateTime? TimeEdit { get; set; }





		[Column] public bool? Active { get; set; }



	}

    
	[TableName("UserRole")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class UserRole : HDDT_FURAMADB.Record<UserRole>  
    {



		[Column] public int Id { get; set; }





		[Column] public int? UserId { get; set; }





		[Column] public int? RoleId { get; set; }



	}

    
	[TableName("UserGroup")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class UserGroup : HDDT_FURAMADB.Record<UserGroup>  
    {



		[Column] public int Id { get; set; }





		[Column] public int? UserId { get; set; }





		[Column] public int? GroupId { get; set; }



	}

    
	[TableName("GroupRole")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class GroupRole : HDDT_FURAMADB.Record<GroupRole>  
    {



		[Column] public int Id { get; set; }





		[Column] public int? GroupId { get; set; }





		[Column] public int? RoleId { get; set; }



	}

    
	[TableName("Customer")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class Customer : HDDT_FURAMADB.Record<Customer>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Code { get; set; }





		[Column] public string Name { get; set; }





		[Column] public string TaxCode { get; set; }





		[Column] public string XML { get; set; }





		[Column] public string TOKEN { get; set; }





		[Column] public string Password { get; set; }





		[Column] public DateTime? TimePost { get; set; }





		[Column] public DateTime? TimeEdit { get; set; }



	}

    
	[TableName("Invoice_Report")]


	[ExplicitColumns]
    public partial class Invoice_Report : HDDT_FURAMADB.Record<Invoice_Report>  
    {



		[Column] public int Id { get; set; }





		[Column] public string Path { get; set; }





		[Column] public string Username { get; set; }





		[Column] public DateTime? TimePost { get; set; }



	}

    
	[TableName("Invoice")]


	[PrimaryKey("Id")]



	[ExplicitColumns]
    public partial class Invoice : HDDT_FURAMADB.Record<Invoice>  
    {



		[Column] public int Id { get; set; }





		[Column] public string PaymentCode { get; set; }





		[Column] public string Pattern { get; set; }





		[Column] public string Serial { get; set; }





		[Column] public DateTime? KindOfService { get; set; }





		[Column] public string CusName { get; set; }





		[Column] public string CusCode { get; set; }





		[Column] public string CusTaxCode { get; set; }





		[Column] public int? InvNo { get; set; }





		[Column] public int? InvNo_AdJust { get; set; }





		[Column] public int? Amount { get; set; }





		[Column] public int? Status { get; set; }





		[Column] public DateTime? TimeEdit_Status { get; set; }





		[Column] public int? PaymentStatus { get; set; }





		[Column] public DateTime? TimeEdit_PaymentStatus { get; set; }





		[Column] public int? TransferStatus { get; set; }





		[Column] public DateTime? TimeEdit_TransferStatus { get; set; }





		[Column] public int? KindOfInv { get; set; }





		[Column] public DateTime? TimeEdit_KindOf { get; set; }





		[Column] public string PublishByUser { get; set; }





		[Column] public string LastModifyByUser { get; set; }





		[Column] public string InvToken { get; set; }





		[Column] public string InvToken_AdJust { get; set; }





		[Column] public int? InvNo_Replace { get; set; }





		[Column] public string InvToken_Replace { get; set; }





		[Column] public string Note { get; set; }





		[Column] public bool? IsWatch { get; set; }





		[Column] public string TOKEN { get; set; }





		[Column] public string XML { get; set; }





		[Column] public DateTime? TimePost { get; set; }





		[Column] public DateTime? TimeEdit { get; set; }





		[Column] public string Room { get; set; }





		[Column] public string Folio { get; set; }





		[Column] public DateTime? Arrival { get; set; }





		[Column] public DateTime? Departure { get; set; }





		[Column] public string QuestQuantity { get; set; }





		[Column] public int? ReportId { get; set; }



	}

    
	[TableName("Error")]


	[ExplicitColumns]
    public partial class Error : HDDT_FURAMADB.Record<Error>  
    {



		[Column] public string Action { get; set; }





		[Column("Error")] public string _Error { get; set; }





		[Column] public DateTime? TimePost { get; set; }



	}


}



